openapi: 3.1.0
info:
  title: User Apis
  version: 1.0.0
  description: API for managing user information.


paths:

#  TODO: api with /me info

  /user/{id}:
    get:
      summary: Get user by ID
      operationId: getUserById
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

  /user:
    post:
      summary: Create a new user
      operationId: createUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequest:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          description: JWT token issued by external Identity Provider

    Role:
      type: object
      properties:
        name:
          type: string
        description:
          type: string

    Company:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        email:
          type: string
          format: email
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        company:
          $ref: '#/components/schemas/Company'
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time

    CreateUserRequest:
      type: object
      required:
        - username
        - email
        - companyId
        - roles
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        companyId:
          type: string
          format: uuid
        roles:
          type: array
          items:
            type: string
